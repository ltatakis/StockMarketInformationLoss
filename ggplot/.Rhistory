library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?name   ?categoryRanking ?date
WHERE {
<http://ltatakis.com/2016/triathlon/d0e44b5c-652b-11e6-968a-a0999b0256af>   <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?rankingOfSmith.
<http://ltatakis.com/2016/triathlon/d0e44b5c-652b-11e6-968a-a0999b0256af> foaf:givenname ?name.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodesOfSmith.
?rankingOfSmith  <http://ltatakis.com/2016/triathlon/hasRankings>  ?smithsRankings.
?smithsRankings <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
#resultMatrix <- as.matrix(results)
#View(resultMatrix)
athleteData <- as.data.frame(results)
print(athleteData)
#  rev(range(athleteData$categoryRanking)) xlab("Race Dates ")
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_points() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?date ?categoryRanking
WHERE {
<http://ltatakis.com/2016/triathlon/d0cbc106-652b-11e6-8101-a0999b0256af>     <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?rankingOfSmith.
<http://ltatakis.com/2016/triathlon/d0cbc106-652b-11e6-8101-a0999b0256af> foaf:givenname ?name.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodesOfSmith.
?rankingOfSmith  <http://ltatakis.com/2016/triathlon/hasRankings>  ?smithsRankings.
?smithsRankings <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
#resultMatrix <- as.matrix(results)
#View(resultMatrix)
athleteData <- as.data.frame(results)
print(athleteData)
#  rev(range(athleteData$categoryRanking)) xlab("Race Dates ")
ggplot(athleteData, aes(date, categoryRanking)) + geom_points() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
#  rev(range(athleteData$categoryRanking)) xlab("Race Dates ")
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?name   ?categoryRanking ?date
WHERE {
<http://ltatakis.com/2016/triathlon/d0e44b5c-652b-11e6-968a-a0999b0256af>   <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?rankingOfSmith.
<http://ltatakis.com/2016/triathlon/d0e44b5c-652b-11e6-968a-a0999b0256af> foaf:givenname ?name.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodesOfSmith.
?rankingOfSmith  <http://ltatakis.com/2016/triathlon/hasRankings>  ?smithsRankings.
?smithsRankings <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
#resultMatrix <- as.matrix(results)
#View(resultMatrix)
athleteData <- as.data.frame(results)
print(athleteData)
#  rev(range(athleteData$categoryRanking)) xlab("Race Dates ")
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
#vis <- vis+
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2014-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2015-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2016-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2014-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_point() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?date ?categoryRanking
WHERE {
<http://ltatakis.com/2016/triathlon/d0d6191c-652b-11e6-8ce3-a0999b0256af>     <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?rankingOfSmith.
<http://ltatakis.com/2016/triathlon/d0d6191c-652b-11e6-8ce3-a0999b0256af> foaf:givenname ?name.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodesOfSmith.
?rankingOfSmith  <http://ltatakis.com/2016/triathlon/hasRankings>  ?smithsRankings.
?smithsRankings <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
#resultMatrix <- as.matrix(results)
#View(resultMatrix)
athleteData <- as.data.frame(results)
print(athleteData)
#  rev(range(athleteData$categoryRanking)) xlab("Race Dates ")
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates ") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
#vis <- vis+
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Jack Cloud") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?date ?categoryRanking
WHERE {
<http://ltatakis.com/2016/triathlon/d0d6191c-652b-11e6-8ce3-a0999b0256af>     <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?rankingOfSmith.
<http://ltatakis.com/2016/triathlon/d0d6191c-652b-11e6-8ce3-a0999b0256af> foaf:givenname ?name.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodesOfSmith.
?rankingOfSmith  <http://ltatakis.com/2016/triathlon/hasRankings>  ?smithsRankings.
?smithsRankings <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
athleteData <- as.data.frame(results)
print(athleteData)
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Jack Cloud") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?date ?categoryRanking
WHERE {
<http://ltatakis.com/2016/triathlon/d0d11692-652b-11e6-b73f-a0999b0256af>     <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?rankingOfSmith.
<http://ltatakis.com/2016/triathlon/d0d11692-652b-11e6-b73f-a0999b0256af> foaf:givenname ?name.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodesOfSmith.
?rankingOfSmith  <http://ltatakis.com/2016/triathlon/hasRankings>  ?smithsRankings.
?smithsRankings <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
athleteData <- as.data.frame(results)
print(athleteData)
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Claire Murray") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Claire Murray") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Claire Murray") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2017-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Claire Murray") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2012-01-12','2017-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Claire Murray") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(10,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Claire Murray") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?date ?categoryRanking
WHERE {
<http://ltatakis.com/2016/triathlon/d0daa0f4-652b-11e6-a01c-a0999b0256af>  <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?rankingOfSmith.
<http://ltatakis.com/2016/triathlon/d0daa0f4-652b-11e6-a01c-a0999b0256af> foaf:givenname ?name.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodesOfSmith.
?rankingOfSmith  <http://ltatakis.com/2016/triathlon/hasRankings>  ?smithsRankings.
?smithsRankings <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
athleteData <- as.data.frame(results)
print(athleteData)
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Maria Owen") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Maria Owen") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?date ?categoryRanking
WHERE {
<http://ltatakis.com/2016/triathlon/d0e01c6e-652b-11e6-b961-a0999b0256af>  <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?rankingOfSmith.
<http://ltatakis.com/2016/triathlon/d0e01c6e-652b-11e6-b961-a0999b0256af> foaf:givenname ?name.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodesOfSmith.
?rankingOfSmith  <http://ltatakis.com/2016/triathlon/hasRankings>  ?smithsRankings.
?smithsRankings <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?rankingOfSmith <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
athleteData <- as.data.frame(results)
print(athleteData)
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates of Helen Hart") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(10, 1), name="Rankings", breaks = seq(10,0, by=-1))
)
)
)
)
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?name   ?categoryRanking ?date
WHERE {
?athletes rdf:type foaf:Person.
?athletes foaf:givenname ?name.
?athletes <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?ranking.
?ranking <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodes.
?ranking  <http://ltatakis.com/2016/triathlon/hasRankings>  ?rankingsOfAthlete.
?rankingsOfAthlete <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?ranking <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
athleteData <- as.data.frame(results)
print(athleteData)
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?name   ?categoryRanking ?date
WHERE {
?athletes rdf:type foaf:Person.
?athletes foaf:givenname ?name.
?athletes <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?ranking.
?ranking <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodes.
?ranking  <http://ltatakis.com/2016/triathlon/hasRankings>  ?rankingsOfAthlete.
?rankingsOfAthlete <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?ranking <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
athleteData <- as.data.frame(results)
print(athleteData)
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
resultMatrix <- as.matrix(results)
View(resultMatrix)
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?name   ?categoryRanking ?date
WHERE {
?athletes rdf:type foaf:Person.
?athletes foaf:givenname ?name.
?athletes <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?ranking.
?ranking <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodes.
?ranking  <http://ltatakis.com/2016/triathlon/hasRankings>  ?rankingsOfAthlete.
?rankingsOfAthlete <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?ranking <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
resultMatrix <- as.matrix(results)
View(resultMatrix)
athleteData <- as.data.frame(results)
print(athleteData)
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query ="PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?name   ?categoryRanking ?date
WHERE {
?athletes rdf:type foaf:Person.
?athletes foaf:givenname ?name.
?athletes <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?ranking.
?ranking <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodes.
?ranking  <http://ltatakis.com/2016/triathlon/hasRankings>  ?rankingsOfAthlete.
?rankingsOfAthlete <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?ranking <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
resultMatrix <- as.matrix(results)
View(resultMatrix)
athleteData <- as.data.frame(results)
print(athleteData)
ggplot(athleteData, aes(date, categoryRanking)) + geom_line() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
print(athleteData)
ggplot(athleteData, aes(date, categoryRanking, colour= variable)) + geom_point() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
library(reshape2)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query ="PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?name   ?categoryRanking ?date
WHERE {
?athletes rdf:type foaf:Person.
?athletes foaf:givenname ?name.
?athletes <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?ranking.
?ranking <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodes.
?ranking  <http://ltatakis.com/2016/triathlon/hasRankings>  ?rankingsOfAthlete.
?rankingsOfAthlete <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?ranking <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
athleteData <- as.data.frame(results)
print(athleteData)
athleteDataMelted = melt(athleteData, id.vars='name')
print(athleteDataMelted)
#ggplot(athleteData, aes(date, categoryRanking) + geom_point() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
print(athleteData)
#athleteDataMelted = melt(athleteData, id.vars='name')
#print(athleteDataMelted)
#ggplot(athleteData, aes(date, categoryRanking) + geom_point() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line()
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_oint() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_point() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
line
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("4 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("5 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("6 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("6 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings By Gender", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line() +  geom_point()+  xlab("Race Dates") + scale_x_date(breaks = date_breaks("6 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings By Gender", breaks = seq(14,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
library(reshape2)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query ="PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT    ?name   ?categoryRanking ?date
WHERE {
?athletes rdf:type foaf:Person.
?athletes foaf:givenname ?name.
?athletes <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?ranking.
?ranking <http://ltatakis.com/2016/triathlon/raceOverallTime> ?allTimeNodes.
?ranking  <http://ltatakis.com/2016/triathlon/hasRankings>  ?rankingsOfAthlete.
?rankingsOfAthlete <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?ranking <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
athleteData <- as.data.frame(results)
print(athleteData)
#ggplot(athleteData, aes(date, categoryRanking) + geom_point() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line() +  geom_point()+  xlab("Race Dates") + scale_x_date(breaks = date_breaks("6 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings By Gender", breaks = seq(14,0, by=-1))
library(SPARQL)
library(ggplot2)
library(igraph)
library(network)
library(ergm)
library(reshape2)
wdqs <- "http://localhost:3030/TriathlonData20To24/sparql"
query ="PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT   ?athletes ?name  ?categoryRanking ?date
WHERE {
?athletes rdf:type foaf:Person.
?athletes foaf:givenname ?name.
?athletes <http://ltatakis.com/2016/triathlon/raceParticipationOfAthlete> ?ranking.
?ranking foaf:gender 'Male'.
?ranking  <http://ltatakis.com/2016/triathlon/hasRankings>  ?rankingsOfAthlete.
?rankingsOfAthlete <http://ltatakis.com/2016/triathlon/overallRanking> ?overallRanking.
?overallRanking <http://ltatakis.com/2016/triathlon/rankingCategory> ?categoryRanking.
?ranking <http://ltatakis.com/2016/triathlon/participantOf> ?race.
?race <http://purl.org/dc/terms/date> ?date
}
"
results <- SPARQL(wdqs, query)$results
results$date <- as.Date(as.POSIXct(results$date, origin="1970-01-01"))
athleteData <- as.data.frame(results)
print(athleteData)
#ggplot(athleteData, aes(date, categoryRanking) + geom_point() +  xlab("Race Dates") + scale_x_date(breaks = date_breaks("3 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings", breaks = seq(14,0, by=-1))
ggplot(athleteData, aes(x=date, y=categoryRanking, colour=name)) + geom_line() +  geom_point()+  xlab("Race Dates") + scale_x_date(breaks = date_breaks("6 months") ,  limits = as.Date(c('2013-01-12','2016-06-01'))) + scale_y_reverse(limits= c(14, 1), name="Rankings By Gender", breaks = seq(14,0, by=-1))
source('~/Desktop/TriathlonData/ComparisonOfFemalePerformanceOverTime.R', echo=TRUE)
source('~/Desktop/TriathlonData/ComparisonOfFemalePerformanceOverTime.R', echo=TRUE)
source('~/Desktop/TriathlonData/ComparisonOfMenOverTime.R', echo=TRUE)
source('~/Desktop/TriathlonData/ComparativeGraphOfAthletes.R', echo=TRUE)
source('~/Desktop/TriathlonData/ComparativeGraphOfAthletes.R', echo=TRUE)
source('~/Desktop/TriathlonData/BillSmithGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/BillSmithGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/HelenHartGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/MariaOwenGraphs.R', echo=TRUE)
source('~/Desktop/TriathlonData/ClaireMurrayGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/JackCloudGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/LefterisGraphSinglePoint.R', echo=TRUE)
source('~/Desktop/TriathlonData/JackCloudGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/JackCloudGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/JackCloudGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/LefterisGraphSinglePoint.R', echo=TRUE)
source('~/Desktop/TriathlonData/JackCloudGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/ClaireMurrayGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/MariaOwenGraphs.R', echo=TRUE)
source('~/Desktop/TriathlonData/HelenHartGraph.R', echo=TRUE)
source('~/Desktop/TriathlonData/MariaOwenGraphs.R', echo=TRUE)
source('~/Desktop/TriathlonData/MariaOwenGraphs.R', echo=TRUE)
source('~/Desktop/TriathlonData/LefterisGraphSinglePoint.R', echo=TRUE)
source('~/Desktop/TriathlonData/LefterisGraphSinglePoint.R', echo=TRUE)
runExample("01_hello")
install.packages("shiny")
library(shiny)
version
updaget
update
install.packages("shiny")
install.packages("shiny")
shiny::runApp('Downloads')
runApp('Desktop/MRes/stockVis')
runApp('Desktop/MRes/stockVis')
runApp('Desktop/MRes/stockVis')
runApp('Downloads')
shiny::runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/stocks')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
install.packages("lubridate")
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
runApp('Desktop/MRes/StockMarketInformationLoss/ggplot')
